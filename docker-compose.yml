version: "3.8"

services:
  mc:
    image: itzg/minecraft-server:${JAVA_VERSION}
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
      MEMORY: "${MEMORY}"
      TZ: "Europe/Berlin"
      ENABLE_AUTOPAUSE: "TRUE"
      OVERRIDE_SERVER_PROPERTIES: "TRUE"
      MAX_TICK_TIME: "-1"
      AUTOPAUSE_TIMEOUT_INIT: "1800"
      AUTOPAUSE_TIMEOUT_EST: "1800"
      TYPE: ${TYPE}
      CF_API_KEY: ${CF_API_KEY}
      CF_PAGE_URL: ${CF_PAGE_URL}
      VERSION: ${MC_VERSION}
    restart: "no"
    depends_on:
      restore-backup:
        condition: service_completed_successfully
    volumes:
      - ./mc-data:/data
    healthcheck:
      test: mc-health
      start_period: ${HEALTHCHECK_START_PERIOD}
      interval: 5s
      retries: 20
  # "init" container for mc to restore the data volume when empty    
  restore-backup:
    image: itzg/mc-backup
    restart: "no"
    entrypoint: restore-tar-backup
    volumes:
      # Must be same mount as mc service, needs to be writable
      - ./mc-data:/data
      # Must be same mount as backups service, but can be read-only
      - ./mc-backups:/backups:ro
  backups:
    image: itzg/mc-backup
    depends_on:
      mc:
        condition: service_healthy
    environment:
      EXCLUDES: "cache,logs,*.tmp"
      BACKUP_INTERVAL: "2h"
      BACKUP_METHOD: "rclone"
      RCLONE_REMOTE: ${RCLONE_REMOTE}
      RCLONE_DEST_DIR: ${SERVER_NAME}
      RCON_HOST: mc
      # since this service waits for mc to be healthy, no initial delay is needed
      INITIAL_DELAY: 0
      PRUNE_BACKUPS_DAYS: "2"
    volumes:
      - ./mc-data:/data:ro
      - ./mc-backups:/backups
      - /root/.config/rclone/rclone.conf:/config/rclone/rclone.conf:ro